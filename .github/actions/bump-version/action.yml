name: 'Bump Version'
description: 'Bumps a semantic version based on the specified bump type'

inputs:
  bump:
    description: 'Version bump type (major, minor, or patch)'
    required: true
  file:
    description: 'Path to properties file containing version (must have version=X.Y.Z format)'
    required: false
    default: 'gradle.properties'
  version-key:
    description: 'Key name for version in the properties file'
    required: false
    default: 'version'

outputs:
  new-version:
    description: 'The new version after bumping'
    value: ${{ steps.calculate.outputs.new_version }}

runs:
  using: 'composite'
  steps:
    - name: Calculate and update version
      id: calculate
      shell: bash
      run: |
        FILE="${{ inputs.file }}"
        VERSION_KEY="${{ inputs.version-key }}"
        BUMP="${{ inputs.bump }}"
        
        # Read current version from file
        if [[ ! -f "$FILE" ]]; then
          echo "Error: File '$FILE' not found"
          exit 1
        fi
        
        CURRENT=$(grep "^${VERSION_KEY}=" "$FILE" | cut -d'=' -f2)
        if [[ -z "$CURRENT" ]]; then
          echo "Error: Could not find '${VERSION_KEY}=' in $FILE"
          exit 1
        fi
        echo "Read version from $FILE: $CURRENT"
        
        # Validate current version format
        if ! [[ $CURRENT =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Invalid version format '$CURRENT'. Expected format: X.Y.Z"
          exit 1
        fi
        
        # Validate bump type
        if [[ ! "$BUMP" =~ ^(major|minor|patch)$ ]]; then
          echo "Error: Invalid bump type '$BUMP'. Must be: major, minor, or patch"
          exit 1
        fi
        
        # Parse version
        IFS='.' read -r major minor patch <<< "$CURRENT"
        
        # Calculate new version
        case "$BUMP" in
          major) NEW="$((major+1)).0.0" ;;
          minor) NEW="$major.$((minor+1)).0" ;;
          patch) NEW="$major.$minor.$((patch+1))" ;;
        esac
        
        # Update file with new version
        sed -i "s/^${VERSION_KEY}=.*/${VERSION_KEY}=$NEW/" "$FILE"
        echo "Updated $FILE: ${VERSION_KEY}=$CURRENT â†’ ${VERSION_KEY}=$NEW"
        
        echo "new_version=$NEW" >> $GITHUB_OUTPUT
        echo "Bumped version from $CURRENT to $NEW (bump type: $BUMP)"
